frequency: daily
datasets:
  # unique peers is calculated from total unique peers seen connecting to preload and bootstrap servers
  # caracol started collecting this data automatically from week ending 20 Mar 2023
  - name: "unique peers"
    source: "caracol"
    query: >
      select * from (values
        ('2023-01-09 00:00:00 Z'::timestamptz, 317798),
        ('2023-01-16 00:00:00 Z'::timestamptz, 420280),
        ('2023-01-23 00:00:00 Z'::timestamptz, 487695),
        ('2023-01-30 00:00:00 Z'::timestamptz, 458967),
        ('2023-02-06 00:00:00 Z'::timestamptz, 490907),
        ('2023-02-13 00:00:00 Z'::timestamptz, 397445),
        ('2023-02-20 00:00:00 Z'::timestamptz, 342812),
        ('2023-02-27 00:00:00 Z'::timestamptz, 327501),
        ('2023-03-06 00:00:00 Z'::timestamptz, 401014),
        ('2023-03-13 00:00:00 Z'::timestamptz, 304623)
      ) as t (date,value)
      union
      select date, value from get_collected_values(3, '2023-03-20 00:00:00 Z'::timestamptz, {{ .Now | timestamptz }})
      order by date;

  - name: "dht servers"
    source: "nebula_ipfs"
    query: >
      with period as (
        select d::date-'1 week'::interval AS start, d::date as end, tstzrange(d::date-'1 week'::interval, d::date) as range, extract(epoch from '1 week'::interval) as duration
        from generate_series({{ .StartOfWeek | timestamptz }}-'14 week'::interval, {{ .StartOfWeek | timestamptz }}, '1 week'::interval) d
      )
      SELECT period.end as date, count(DISTINCT peer_id) as value
      FROM period, visits v
      WHERE visit_started_at >= period.start
        AND visit_started_at < period.end
        AND type = 'crawl'
      group by period.end;
  - name: "dht server ip addresses"
    source: "nebula_ipfs"
    query: >
      with period as (
          select d::date-'1 week'::interval AS start, d::date as end, tstzrange(d::date-'1 week'::interval, d::date) as range, extract(epoch from '1 week'::interval) as duration
          from generate_series({{ .StartOfWeek | timestamptz }}-'14 week'::interval, {{ .StartOfWeek | timestamptz }}, '1 week'::interval) d
        ), peers AS (
          select period.end, v.peer_id, unnest(v.multi_address_ids) multi_address_id
          from period, visits v
          where visit_started_at >= period.start
            and visit_started_at < period.end
          and type = 'crawl'
          group by period.end, v.peer_id, unnest(v.multi_address_ids)
        )
        select period.end as date, count(distinct ma.addr) as value
          from peers inner join multi_addresses ma on ma.id = peers.multi_address_id
          join period on peers.end = period.end
        group by period.end;

computed:
  - name: "dht clients"
    function: "diff"
    datasets:
      - dataset: "unique peers"
        joinField: "date"
        valueField: "value"
      - dataset: "dht servers"
        joinField: "date"
        valueField: "value"

series:
  - type: "bar"
    name: "DHT Servers"
    dataset: "dht servers"
    labels: "date"
    values: "value"
    color: "lightblue"
  - type: "bar"
    name: "DHT Clients"
    dataset: "dht clients"
    labels: "field"
    values: "value"
    color: "lightred"
  - type: "line"
    name: "DHT Server IP Addresses"
    dataset: "dht server ip addresses"
    labels: "date"
    values: "value"
    color: "black"
    marker: "circle"


layout:
  barmode: stack
  title:
    text: 'Data: {{ .EndOfPreviousWeek | weekModify "-14"  | simpledate}} to {{ .EndOfPreviousWeek | simpledate }}. Sources: Bootstrap+preload server logs; Nebula.'
    font:
      size: 10
    x: 0.99
    xanchor: "right"
    y: 0.01
    yanchor: "bottom"
  legend:
    orientation: "h"
  yaxis:
    autorange: true
    rangemode: "tozero"
    title:
      text: "Number of unique peers"
