frequency: weekly
datasets:
  - name: "main"
    source: "nebula_ipfs"
    query: >
      with u as (
        with period as (
          select d::date-'1 week'::interval AS start, d::date as end, tstzrange(d::date-'1 week'::interval, d::date) as range, extract(epoch from '1 week'::interval) as duration
          from generate_series('2023-03-13 00:00:00'::timestamptz, '2023-03-13 00:00:00'::timestamptz, '1 week'::interval) d
        ) -- 10 weeks
        , vma as (
          select v.peer_id, unnest(v.multi_address_ids) multi_address_id
          from period, visits v
          where v.visit_started_at >= period.start
            and v.visit_started_at <  period.end
            and v.type = 'crawl'
          group by v.peer_id, unnest(v.multi_address_ids)
        )
        select period.end as date, ma.continent, s.peer_id,
          extract(epoch from sum(upper(s.uptime * period.range) - lower(s.uptime * period.range ))::interval)/period.duration as uptime
        from period, sessions s
          left join vma on vma.peer_id=s.peer_id
          inner join multi_addresses ma on vma.multi_address_id = ma.id
        where s.uptime && period.range
        group by period.end, ma.continent, s.peer_id, period.duration
      )
      select date,
        case
          when continent = 'NA' then 'North America'
          when continent = 'AS' then 'Asia'
          when continent = 'EU' then 'Europe'
          when continent = 'AF' then 'Africa'
          when continent = 'OC' then 'Oceania'
          when continent = 'SA' then 'South America'
          else 'Uncategorised'
        end as continent,
        sum(case when uptime >= 0.8 then 1 else 0 end) as online,
        sum(case when uptime >= 0.4 and uptime < 0.8 then 1 else 0 end) as mostlyonline,
        sum(case when uptime >= 0.1 and uptime < 0.4 then 1 else 0 end) as mostlyoffline,
        sum(case when uptime < 0.1 then 1 else 0 end) as offline
      from u
      group by date, continent
      order by date, continent;

series:
  - type: "hbar"
    name: "Online"
    dataset: "main"
    labels: "continent"
    values: "online"
    color: "online"
  - type: "hbar"
    name: "Mostly online"
    dataset: "main"
    labels: "continent"
    values: "mostlyonline"
    color: "mostlyonline"
  - type: "hbar"
    name: "Mostly offline"
    dataset: "main"
    labels: "continent"
    values: "mostlyoffline"
    color: "mostlyoffline"
  - type: "hbar"
    name: "Offline"
    dataset: "main"
    labels: "continent"
    values: "offline"
    color: "offline"

layout:
  barmode: stack
  title:
    text: "DHT server availability, classified, by region"
